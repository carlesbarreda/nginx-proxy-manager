name: Nginx proxy manager images CI

on:
  workflow_dispatch:

env:
  IMAGE_NAME: carlesbarreda/nginx-proxy-manager

jobs:
  lint1:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint docker/Dockerfile
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: docker/Dockerfile

  lint2:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint docker/dev/Dockerfile
        uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: docker/dev/Dockerfile

  scanner:
    name: Build and scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Get npm version
        #TODO: some file content check 
        run: echo "NPM_VERSION=$(cat .version)" >> $GITHUB_ENV

      - name: Build npm
        run: |
          cd scripts
          ./frontend-build

      - name: Build amd64
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          build-args: |
            BUILD_VERSION=dev
            BUILD_COMMIT=notset
            BUILD_DATE=$(date '+%Y-%m-%d %T %Z')
            GOPROXY=
            GOPRIVATE=
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.NPM_VERSION }}
            ${{ env.IMAGE_NAME }}:latest
          load: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:${{ env.NPM_VERSION }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  Build:
    name: "Nginx proxy manager"
    runs-on: ubuntu-20.04
    needs: [lint1, lint2, scanner]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Get npm version
        #TODO: some file content check 
        run: echo "NPM_VERSION=$(cat .version)" >> $GITHUB_ENV

      - name: Build npm
        run: |
          cd scripts
          ./frontend-build
          ./buildx \
            --tag $IMAGE_NAME:$NPM_VERSION \
            --tag $IMAGE_NAME:latest \
            --progress=plain \
            --no-cache \
            --push
